class Zeit{static init(){this.onDocumentFocus=this.onDocumentFocus.bind(this),document.addEventListener("focus",this.onDocumentFocus,!0)}static onEditor(t){this._onEditorCallbacks.push(t)}static isEditor(t){return t.matches(this.EDITOR_SELECTOR)}static isSingleLineInput(t){return isTextInput(t)&&!t.disabled&&!t.readOnly&&!!t.closest("#editor-forms, #cp-content-inner")}static isEditable(t){return t.matches(".editable")}static isEditorChild(t){return Boolean(this.isEditable(t)&&t.closest(this.EDITOR_SELECTOR))}static initEditor(t){t.setAttribute("data-lt-tweaks","zeit")}static destroyEditor(t){t.removeAttribute("data-lt-tweaks")}static simulateKeyInput(){const t=document.querySelector(":focus")||document.activeElement;if(t){const e=new KeyboardEvent("keydown",{bubbles:!0,cancelable:!0,keyCode:67,which:67,location:0,key:"c"});t.dispatchEvent(e);const s=new KeyboardEvent("keypress",{bubbles:!0,cancelable:!0,keyCode:67,which:67,location:0,key:"c"});t.dispatchEvent(s);const n=new KeyboardEvent("keyup",{bubbles:!0,cancelable:!0,keyCode:67,which:67,location:0,key:"c"});t.dispatchEvent(n)}}static simulateClick(t){const e=t.editor.inputAreaWrapper.getTextRanges(t.offset,t.length);if(e[0]){const t=document.activeElement||document.querySelector(":focus");t&&!t.contains(e[0].node)&&"blur"in t&&t.blur();const s=e[0].node.parentElement;if(s&&!s.isContentEditable){const t=new MouseEvent("mousedown",{bubbles:!0,cancelable:!0});s.dispatchEvent(t);const e=new MouseEvent("click",{bubbles:!0,cancelable:!0});s.dispatchEvent(e);const n=new MouseEvent("mouseup",{bubbles:!0,cancelable:!0});return s.dispatchEvent(n),wait(100)}}return Promise.resolve()}static isIgnoredElement(t){return t.classList.contains("type-topicbox")||t.classList.contains("type-volume")||t.classList.contains("type-divison")||t.classList.contains("landing-zone")||t.classList.contains("zeit-edit-interfaces-IFoldable")||t.classList.contains("rte-toolbar")||t.classList.contains("link_input")}static destroy(){document.removeEventListener("focus",this.onDocumentFocus,!0),this._onEditorCallbacks=[]}static onDocumentFocus(t){if(t.target instanceof Element&&this.isEditable(t.target)){const e=t.target.closest(this.EDITOR_SELECTOR);e&&!e.hasAttribute("data-lt-tweaks")&&this._onEditorCallbacks.forEach((t=>{t(e,!1)}))}}}Zeit.EDITOR_SELECTOR="#editable-body, .editable-body",Zeit._onEditorCallbacks=[];